netRolEntities

Login

   public ActionResult Login(Usuarios model, string returnUrl)
        {
            netRolEntities db = new netRolEntities();

            var dataItem = db.Usuarios.Where(x => x.Username == model.Username && x.Password == model.Password).First();

            if (dataItem != null)
            {
                FormsAuthentication.SetAuthCookie(dataItem.Username, false);
                if (Url.IsLocalUrl(returnUrl) && returnUrl.Length > 1 &&returnUrl.StartsWith("/") 
                    && !returnUrl.StartsWith("//") 
                    && !returnUrl.StartsWith("/\\"))
                {
                    return Redirect(returnUrl);
                }
                else
                {
                    return RedirectToAction("Index");
                }
            }
            else
            {
                ModelState.AddModelError("", "Usuario/Contraseña no es Valido");
                return View();
            }
           
        }
		****************************
		Cerrar Session
		  public  ActionResult LogOut()
        {
            FormsAuthentication.SignOut();
            return RedirectToAction("Index", "Home");
        }
*****************Web.config****************************

Agregar en <system.web>

 <authentication mode="Forms">
      <forms loginUrl="~/Home/Login" defaultUrl="~/" timeout="20" slidingExpiration="true" />
    </authentication>


*******Vista Login********************

@using (Html.BeginForm("Login","Home" , new { returnUrl = Request.QueryString["ReturnUrl"]}, FormMethod.Post))


********Vista para Identicar a usuario registrado*********************

 @if (User.Identity.IsAuthenticated)
        {
            <h1>Bienvenido usuario @(User.Identity.IsAuthenticated ?  HttpContext.Current.User.Identity.Name : "Invitado" ) </h1>
        }

***************Manegar Roles*************************

Web.config  

Agregar en <system.web>

    <roleManager enabled="true" defaultProvider="MyProvider">
      <providers>
        <clear/>
        <add name="MyProvider" type="AdministrarRolesBasico.MyRoleProvider.SitioRoles"/>
      </providers>
    </roleManager>

	AdministrarRolesBasico.MyRoleProvider.SitioRoles = lugar donde esta la clase que maneja los roles
***
Clase que manega y heredera el RoleProvider

*la clase hay que implementar la abstraccion (control+ .)

 public class SitioRoles : RoleProvider
    {
       
	    public override string[] GetRolesForUser(string username)
        {
            netRolEntities db = new netRolEntities();
            string data = db.Usuarios.Where(x => x.Username == username).FirstOrDefault().Role;
            string[] result = { data };
            return result;
        }

       
    }